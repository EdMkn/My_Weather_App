name: Android CI

on:
  push:
    branches: [ master ]  # Déclencheur : à chaque push sur "master"
    paths:
      - 'app/src/main/java/**'       # Fichiers Kotlin/Java
      - 'app/src/main/res/**'    
      - 'app/src/main/assets/**'     # Fichiers assets
      - 'app/src/test/**'           # Tests unitaires
      - 'gradle.properties'         # Config globale    # Ressources (XML, drawables)
      - 'app/build.gradle.kts'       # Config Gradle
      - 'app/src/main/AndroidManifest.xml'
      - '.github/workflows/**'

  pull_request:
    branches: [ master ]
    paths:
      - 'app/src/**' 
      - 'gradle.properties'         # Config globale    # Ressources (XML, drawables)
      - 'app/build.gradle.kts'       # Config Gradle
      - 'app/src/main/AndroidManifest.xml'
      - '.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest  # Machine virtuelle Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Télécharge le code

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build APK
        run: ./gradlew assembleDebug  # Génère l'APK
        env:
          OPEN_WEATHER_API_KEY: ${{ secrets.OPEN_WEATHER_API_KEY }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug  # Nom de l'APK généré
          path: app/build/outputs/apk/debug/app-debug.apk  # Chemin de l'APK
